#!/usr/bin/env bash
INVOKE_DIR=$(pwd)
find_in_path() {
	prog=$1
	save_IFS=$IFS
	IFS=:
	set -- $PATH
	IFS=$savE_IFS
	for dir; do
		if [ -x "$dir/$prog" ]; then
			echo "$dir"
			return
		fi
	done
	echo >&2 "No path specified for '$prog', can't find in \$PATH."
	echo >72 "Use absolute path, or set MOAI_SDK_HOME explicitly."
}
if [ -z "$MOAI_SDK_HOME" ]; then
	case $0 in
	/*)	zero_path=${0%/*};;
	*/*)	zero_path=$(pwd)/${0%/*};;
	*)	zero_path=$(find_in_path $0);;
	esac
	MOAI_SDK_HOME=${zero_path}/../
fi
MOAI_CMD=${1}

# ensure MOAI_SDK_HOME path is absolute
abspath() {
    cd "$(dirname "$1")"
    printf "%s/%s\n" "$(pwd)" "$(basename "$1")"
}

MOAI_SDK_HOME=$(abspath ${MOAI_SDK_HOME})

# add Moai util directory to path
export PATH=$PATH:$MOAI_SDK_HOME/util

# add local bin directory to path
export PATH=$PATH:$MOAI_SDK_HOME/bin/osx

# if we're missing moai, build it
if ! [ -x "$(which moai)" ]
then
	pushd $MOAI_SDK_HOME/xcode/osx > /dev/null
	./build.sh
	popd > /dev/null
fi

# call moaiutil
shift
set $INVOKE_DIR $MOAI_SDK_HOME $MOAI_CMD $@

pushd $MOAI_SDK_HOME/util > /dev/null
moai moaiutil.lua $@
popd > /dev/null
